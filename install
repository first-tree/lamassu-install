# Note: This is not yet a script, but a series of steps to be executed
# over bash. 
# The upstream install file, provided by Lamassu, does not work out-of-the-box with the Ubuntu
# Server. It has to be tweaked so that it will work on Ubuntu 17.04 AWS.


##
# Declare environmental variables
##
export LOG_FILE=/tmp/install.log
export CERT_DIR=/etc/ssl/certs
export KEY_DIR=/etc/ssl/private
export CONFIG_DIR=/etc/lamassu
export MIGRATE_STATE_PATH=$CONFIG_DIR/.migrate
export LAMASSU_CA_PATH=$CERT_DIR/Lamassu_CA.pem
export CA_KEY_PATH=$KEY_DIR/Lamassu_OP_Root_CA.key
export CA_PATH=$CERT_DIR/Lamassu_OP_Root_CA.pem
export SERVER_KEY_PATH=$KEY_DIR/Lamassu_OP.key
export SERVER_CERT_PATH=$CERT_DIR/Lamassu_OP.pem
export SEEDS_DIR=$HOME/seeds
export SEED_FILE=$SEEDS_DIR/seed.txt
export BACKUP_DIR=/var/backups/postgresql
export BLOCKCHAIN_DIR=/mnt/blockchains

curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash

sudo apt-get update

sudo apt install python-minimal build-essential supervisor postgresql libpq-dev -y -q

curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash

#Load NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

##
# Install NVM.
##
nvm
nvm install v8.10
nvm alias default v8.10
nvm use default

#Generate random seed
SEED=$(openssl rand -hex 32)
echo $SEED

##
# Install lamassu-server
##

NODE_MODULES=$(npm -g root)

npm -g install lamassu/lamassu-server#v5

npm install lamassu/lamassu-server#v5

##
#
##
POSTGRES_PW=$(hkdf postgres-pw $SEED)
echo $POSTGRES_PW

sudo su postgres
POSTGRES_PW=#(copy password from the one generated by hkdf)
psql -c "CREATE ROLE lamassu_pg WITH LOGIN SUPERUSER PASSWORD '$POSTGRES_PW';"
createdb lamassu

mkdir -p $CERT_DIR 
sudo mkdir -p $CONFIG_DIR

sudo openssl genrsa \
  -out $CA_KEY_PATH \
  4096

sudo openssl req \
  -x509 \
  -sha256 \
  -new \
  -nodes \
  -key $CA_KEY_PATH \
  -days 3560 \
  -out $CA_PATH \
  -subj "/C=IS/ST=/L=Reykjavik/O=Lamassu Operator CA/CN=lamassu-operator.is" 

sudo openssl genrsa \
  -out $SERVER_KEY_PATH \
  4096

      
vi /etc/ssl/openssl.cnf 
#Add "[SAN]\nsubjectAltName=IP.1:$IP"

openssl req -new \
  -key $SERVER_KEY_PATH \
  -out /tmp/Lamassu_OP.csr.pem \
  -subj "/C=IS/ST=/L=Reykjavik/O=Lamassu Operator/CN=$IP" \
  -reqexts SAN \
  -sha256 \
  -config /tmp/openssl.cnf



openssl x509 \
  -req -in /tmp/Lamassu_OP.csr.pem \
  -CA $CA_PATH \
  -CAkey $CA_KEY_PATH \
  -CAcreateserial \
  -out $SERVER_CERT_PATH \
  -extfile /tmp/openssl.cnf \
  -extensions SAN \
  -days 3650

LAMASSU_CA_FILE=$NODE_MODULES/lamassu-server/Lamassu_CA.pem
echo $LAMASSU_CA_FILE

sudo cp $LAMASSU_CA_FILE $LAMASSU_CA_PATH

#Set IP to be the external IP address of the server
IP=xx.xx.xx.xx #External IP Address
echo $IP

cat <<EOF > /tmp/lamassu.json
{
  "postgresql": "postgres://lamassu_pg:$POSTGRES_PW@localhost/lamassu",
  "seedPath": "$SEED_FILE",
  "lamassuCaPath": "$LAMASSU_CA_PATH",
  "caPath": "$CA_PATH",
  "certPath": "$SERVER_CERT_PATH",
  "keyPath": "$SERVER_KEY_PATH",
  "hostname": "$IP",
  "logLevel": "info",
  "lamassuServerPath": "$NODE_MODULES/lamassu-server",
  "migrateStatePath": "$MIGRATE_STATE_PATH",
  "blockchainDir": "$BLOCKCHAIN_DIR"
}
EOF
sudo mv /tmp/lamassu.json $CONFIG_DIR/lamassu.json

sudo /home/ubuntu/.nvm/versions/node/v8.10.0/bin/node /home/ubuntu/.nvm/versions/node/v8.10.0/bin/lamassu-migrate

#Run the admin server via HTTPS

#Get the One-time URL for the admin
ADMIN_REGISTRATION_URL=`lamassu-register admin`
echo $ADMIN_REGISTRATION_URL 


#Run the server!
sudo nohup /home/ubuntu/.nvm/versions/node/v8.10.0/bin/node /home/ubuntu/.nvm/versions/node/v8.10.0/bin/lamassu-admin-server 

